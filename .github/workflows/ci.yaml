name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main", "development", "@*/*" ]
    paths:
      - 'src/**'
      - '.github/workflows/ci.yaml'
      - 'proto/**'
  workflow_dispatch:
env:
  CARGO_TERM_COLOR: always
jobs:
  build-release:
    runs-on: ubuntu-latest
    concurrency:
      group: ci-build-release-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Update toolchain
        run: rustup update
      - name: Install protoc
        uses: arduino/setup-protoc@v3
      - name: Build
        run: cargo build --release
  build-debug:
    runs-on: ubuntu-latest
    concurrency:
      group: ci-build-debug-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Update toolchain
        run: rustup update
      - name: Install protoc
        uses: arduino/setup-protoc@v3
      - name: Build
        run: cargo build
  clippy-check:
    runs-on: ubuntu-latest
    concurrency:
      group: ci-clippy-check-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Update toolchain
        run: rustup update
      - name: Install protoc
        uses: arduino/setup-protoc@v3
      - name: Run Clippy
        run: cargo clippy --all-targets --all-features
  fmt-check:
    runs-on: ubuntu-latest
    concurrency:
      group: ci-fmt-check-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          submodules: true
      - name: Update toolchain
        run: rustup update
      - name: Install protoc
        uses: arduino/setup-protoc@v3
      - name: Run fmt
        run: cargo fmt -v --check

  # test:
  #   runs-on: ubuntu-latest
  #   concurrency:
  #     group: solver-ci-test-${{ github.ref }}
  #     cancel-in-progress: true
  #   steps:
  #     - uses: actions/checkout@v4
  #       with:
  #         submodules: true
  #     - name: Update toolchain
  #       working-directory: ${{ env.WORKING_DIRECTORY }}
  #       run: rustup update
  #     - name: Build
  #       working-directory: ${{ env.WORKING_DIRECTORY }}
  #       run: cargo build --release
  #     - name: Run tests
  #       working-directory: ${{ env.WORKING_DIRECTORY }}
  #       run: cargo test --release

